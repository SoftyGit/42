/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   get_next_line.h                                    :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: yongjale <yongjale@student.42seoul.kr>     +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/12/14 00:20:19 by yongjale          #+#    #+#             */
/*   Updated: 2022/12/27 21:37:28 by yongjale         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#ifndef GET_NEXT_LINE_H
# define GET_NEXT_LINE_H
# define BUFFER_SIZE 100
/******************************************************************************/
/*** __HEADER__START **********************************************************/
# include <stdlib.h>
# include <unistd.h>
/*** __HEADER__END ************************************************************/
/******************************************************************************/
/*** __CONST+MACROS+TYPEDEF__START ********************************************/
typedef struct list_fd
{
	int				val;
	char			*rd;
	char			*ret;
	struct list_fd	*next_fd;
}t_list_fd;
/*** __CONST+MACROS+TYPEDEF__END **********************************************/
/******************************************************************************/
/******************************************************************************/
/*** __FUNCTION__START ********************************************************/

/* __FUNCTION__START */
char	*get_next_line(int fd);
/* __FUNCTION__END */

/* UTILS__FUNCTION__START */
char		*get_updated_ret(char *dst, char *src, int mode);
size_t		get_len(char	*str, int mode);
t_list_fd	*get_ini_list(int fd);
t_list_fd	*get_cur_list(int fd, t_list_fd *list);
/* UTILS__FUNCTION__END */

/*** __FUNCTION__END **********************************************************/
/******************************************************************************/

#endif